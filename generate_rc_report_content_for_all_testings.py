import glob
from shutil import copyfile
#get the file lists
class GenerateAllReports():
	def __init__(self):
		self.general_reports_name = "general_report_content.txt"
		self.general_reports_content = ""
		self.report_files_list = []
		self.head_column = "<tr><th colspan='1'>Test Type</th><th colspan='1'>Test Result</th><th colspan='1'>Test Result Url</th><th colspan='1'>Test Enviroment</th></tr>"
	
	def generate_all_reports(self):
		self.report_files_list = glob.glob("/tmp/*/RC_CI-master/auto_testing_CI/*_content.txt")
		print "==========Find the following report files:=========="
		for file in self.report_files_list:
			print file
		if len(self.report_files_list) == 1:
			print "==== Here just one report, read it as the general report ===="
			print self.report_files_list[0]
			general_reports_content_file = open(self.report_files_list[0], 'r')
			general_report_content = general_reports_content_file.read()
			general_reports_content_file.close()
			print general_report_content
			self.general_reports_content = general_report_content
		elif len(self.report_files_list) > 1:
			print "==== There are some reports, generate the general report for all testing reports"
			for file in self.report_files_list:
				print file
				report = open(file)
				report_content = report.read()
				report.close()
				remove_table_head = report_content.replace("<table><tbody>","", 1)
				remove_table_head_column = remove_table_head.replace(self.head_column,'', 1)
				remove_table_end = remove_table_head_column.replace("</tbody></table>",'', 1)
				self.general_reports_content += remove_table_end
			self.general_reports_content = "<table><tbody>" + self.head_column + self.general_reports_content + "</tbody></table>"

		report_note_1 = "<p>The report is generated by CI_3(ET QE Build Testing CI[1]) automatically.</p>"
		report_note_2 = "<p>Note that 'PASSED' of 'Performance Baseline Testing' means the performance of current build is ok to release[2]. For others, 'PASSED' means all testing cases are passed.</p>"
		report_footer_1 = "<p>[1] ET QE Build Testing CI is one QE CI to track all processes of build testings, including enviroment preparation, testing, results collection and reports by on click.</p>"
		report_footer_2 = "<p>[2]'ok to release' here means:</p>"
		report_footer_3 = "<p>     1. There is no obvious performance fallback of the current build.</p>"
		report_footer_4 = "<p>     2. There is few obvious (>20%) performance fallback. But QE has confirmed it will not block the release </p>"
		report_footer_5 = "<p>Anything about the reports or the testings, you can join #qe-bne or send mail to 'errata-qe-team' for help.</p>"
		report_beginning = report_note_1 + report_note_2
		report_ending = report_footer_1 + report_footer_2 + report_footer_3 + report_footer_4 + report_footer_5
		self.general_reports_content = report_beginning + "<p></p>" + self.general_reports_content + "<p></p>" + report_ending



if __name__== "__main__":
	generate_all_reports= GenerateAllReports()
	generate_all_reports.generate_all_reports()
